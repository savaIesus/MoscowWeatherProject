// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCore1.Services;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NetCore1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250329072755_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NetCore1.Models.MoscowWeatherData", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("MoscowTime")
                        .HasColumnType("time");

                    b.Property<double?>("Cloudiness")
                        .HasColumnType("double precision");

                    b.Property<decimal>("DewPoint")
                        .HasColumnType("decimal(4,1)");

                    b.Property<double>("H")
                        .HasColumnType("double precision");

                    b.Property<double>("Humidity")
                        .HasColumnType("double precision");

                    b.Property<int>("Pressure")
                        .HasColumnType("integer");

                    b.Property<double>("Temperature")
                        .HasColumnType("decimal(5,1)");

                    b.Property<double?>("VV")
                        .HasColumnType("double precision");

                    b.Property<string>("WeatherPhenomena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WindDirection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WindSpeed")
                        .HasColumnType("integer");

                    b.HasKey("Date", "MoscowTime");

                    b.ToTable("moscow_weather");
                });
#pragma warning restore 612, 618
        }
    }
}
